name: release

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        name: Lint
        uses: github/super-linter/slim@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_GO: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  golang-lint:
    name: golang-lint
    runs-on: ubuntu-latest
    steps:
      -
        uses: actions/checkout@v2
      -
        name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: 'latest'

  release:
    name: release
    runs-on: ubuntu-latest
    needs: [lint, golang-lint]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        uses: actions/setup-node@v2
        with:
          node-version: 14
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            palermo/new-relic-trace-proxy
            quay/palermo/new-relic-trace-proxy
          tags: |
            type=sha,format=long,prefix=
            type=ref,event=tag
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Login to Quay.io
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: false
          target: export
          outputs: out
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            test
      -
        name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      -
        name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx semantic-release
